services:
  postgres:
    image: postgres
    container_name: postgres_db
    networks:
      my_custom_network:
        ipv4_address: 172.20.0.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: Educonnect
    ports:
      - "9999:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata/data:/var/lib/postgresql/data # Volume để lưu trữ database PostgreSQL
      - ./insert_test_data.sql:/docker-entrypoint-initdb.d/insert_test_data.sql

  fastapi:
    build:
      context: .
      dockerfile: dockerfile.backend
    container_name: educonnect_fastapi
    networks:
      my_custom_network:
        ipv4_address: 172.20.0.5
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - ENV=development
    depends_on:
      - postgres
    restart: on-failure

  frontend:
    build:
      context: .
      dockerfile: dockerfile.frontend
    container_name: frontend
    ports:
      - "80:80"
      - "443:443" # Thêm cổng 443 cho HTTPS
    networks:
      - my_custom_network
    restart: on-failure
    volumes: # Thêm volume để Nginx có thể truy cập chứng chỉ
      - ./nginx-certs:/etc/nginx/certs
      - ./frontend:/usr/share/nginx/html # Đảm bảo frontend vẫn được copy
      - ./nginx-data:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx-certs:/etc/letsencrypt # Nơi Certbot lưu trữ chứng chỉ
      - ./nginx-data:/var/www/certbot # Để Certbot xác minh quyền sở hữu domain
    command: certonly --webroot --webroot-path=/var/www/certbot --email superappolo@gmail.com --agree-tos --no-eff-email -d educonnect.id.vn
    networks:
      - my_custom_network
    depends_on:
      - frontend # Certbot cần frontend chạy để xác minh

networks:
  my_custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24