@import url("component/header.css");
:root {
   /* ... (keep existing variables) ... */
   --primary-color: #0d1472;
   --secondary-color: #f0f4ff;
   --accent-color: #3c4fe0;
   --text-color: #333;
   --light-text: #888;
   --white: #fff;
   --purple-gradient: linear-gradient(135deg, #1a0049 0%, #3c4fe0 100%);
   --tutor-border-color: #6c7dff;
   --card-bg: #ffffff;
   --success-color: #28a745;
   --error-color: #dc3545;
   --spinner-color: #6c7dff;
   --button-color: #6c7dff;
   --button-text-color: #ffffff;

   /* Card dimensions */
   --card-width: 220px;
   --card-width-small: 180px; /* Adjusted for smaller screens */
   --card-image-height: 200px;
   --card-image-height-small: 160px;
   --card-gap: 30px; /* Slightly reduced gap */
   --card-gap-small: 15px;
   --container-padding-vertical: 60px;
}

* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
   font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background-color: #f8f9fa;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

main {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
}

/* Header Styles */

/* Matching Animation CSS */
.match-container {
   text-align: center;
   position: relative;
   width: 100%;
   /* CHANGE: Adjust max-width for 3 cards */
   max-width: calc(var(--card-width) * 3 + var(--card-gap) * 2 + 60px); /* Added extra padding */
   padding-top: var(--container-padding-vertical);
   padding-bottom: var(--container-padding-vertical);
   min-height: 500px;
   display: flex;
   justify-content: center;
   align-items: center;
}

.loading-spinner {
   position: absolute; top: 50%; left: 50%;
   transform: translate(-50%, -50%);
   font-size: 3.5em; color: var(--spinner-color); z-index: 5;
   opacity: 1; transition: opacity 0.4s ease-out, transform 0.4s ease-out;
}
.loading-spinner i { display: block; animation: spin 1.5s linear infinite; }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
.loading-spinner.hidden { opacity: 0; transform: translate(-50%, -50%) scale(0.3); pointer-events: none; }

.tutor-area {
   display: flex;
   justify-content: center;
   gap: var(--card-gap);
   width: auto;
    /* CHANGE: Adjust max-width for 3 cards and 2 gaps */
   max-width: calc(var(--card-width) * 3 + var(--card-gap) * 2);
   position: absolute; top: 50%; left: 50%;
   transform: translate(-50%, -50%);
   z-index: 1; opacity: 0; pointer-events: none;
   transition: opacity 0.2s ease-in; transition-delay: 0.3s;
}
.tutor-area.visible { opacity: 1; pointer-events: auto; }

.tutor-card {
   background-color: var(--card-bg); border-radius: 12px;
   box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
   width: var(--card-width); overflow: hidden; display: flex;
   flex-direction: column; position: relative; z-index: 1;
   opacity: 0; transform: translateY(30px) scale(0.9);
   transition: opacity 0.6s ease-out, transform 0.6s ease-out, height 0.3s ease-out; /* ADDED: height transition */
   pointer-events: none;
}
.tutor-card.visible { opacity: 1; transform: translateY(0) scale(1); pointer-events: auto; }

.tutor-label {
   position: absolute; top: 10px; left: 10px;
   background-color: rgba(60, 79, 224, 0.85); color: white;
   padding: 4px 12px; border-radius: 20px; font-size: 0.85em;
   font-weight: 600; z-index: 2; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}
.tutor-image { width: 100%; height: var(--card-image-height); overflow: hidden; background-color: #eee; }
.tutor-image img { display: block; width: 100%; height: 100%; object-fit: cover; }
.tutor-info { padding: 20px 15px; text-align: center; flex-grow: 1; /* ADDED: Allows info to grow */ }
.tutor-name { font-size: 1.15em; font-weight: 600; color: var(--text-color); margin: 0 0 15px 0; }
.tutor-buttons { display: flex; gap: 10px; justify-content: center; margin-bottom: 15px; /* ADDED: space before details */ }
.tutor-seemore-btn, .tutor-message-btn {
   display: inline-block; padding: 8px 20px; border-radius: 50px;
   font-weight: 600; font-size: 0.9em; text-decoration: none; cursor: pointer;
   transition: background-color 0.2s ease, color 0.2s ease;
}
.tutor-seemore-btn { border: 2px solid var(--button-color); color: var(--button-color); background-color: transparent; padding: 8px 25px; }
.tutor-seemore-btn:hover { background-color: var(--button-color); color: var(--button-text-color); }
.tutor-message-btn { border: 2px solid #28a745; color: #28a745; background-color: transparent; }
.tutor-message-btn:hover { background-color: #28a745; color: white; }

/* --- ADDED: Styles for Tutor Details --- */
.tutor-details {
font-size: 0.85em;
color: var(--light-text);
margin-top: 10px;
padding: 10px;
background-color: #f9f9f9; /* Light background for contrast */
border-radius: 6px;
border: 1px solid #eee;
text-align: left;
max-height: 0; /* Start hidden */
opacity: 0;
overflow: hidden; /* Important: Keep hidden initially and during transition */
transition: max-height 0.4s ease-out, opacity 0.3s ease-out 0.1s, padding 0.4s ease-out, margin-top 0.4s ease-out; /* Smooth transition */
}

/* --- MODIFIED THIS RULE --- */
.tutor-card.details-visible .tutor-details {
   /* You can adjust this max-height value as needed */
   max-height: 150px; /* Set a maximum height before scrolling starts */
   opacity: 1;
   padding: 10px; /* Restore padding */
   margin-top: 10px; /* Restore margin */
   overflow-y: auto;  /* ADDED: Show vertical scrollbar ONLY if content overflows max-height */
   /* Optional: Add a little right padding to prevent text touching the scrollbar */
   padding-right: 15px;
}
/* --- END MODIFIED RULE --- */

.tutor-details p {
   margin-bottom: 5px;
   line-height: 1.4;
}
.tutor-details strong {
   color: var(--text-color);
   margin-right: 5px;
}
/* --- END ADDED --- */

.final-status-box {
   position: absolute; top: 40px; left: 50%;
   transform: translateX(-50%) translateY(10px);
   background-color: var(--card-bg); padding: 10px 25px; border-radius: 8px;
   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12); color: var(--success-color);
   font-weight: 600; font-size: 1.1em; white-space: nowrap; opacity: 0;
   visibility: hidden; transition: opacity 0.4s ease-out, visibility 0.4s ease-out, transform 0.4s ease-out;
   z-index: 10;
}
.final-status-box.error { color: var(--error-color); }
.final-status-box.visible { opacity: 1; visibility: visible; transform: translateX(-50%) translateY(0); }
.final-status-box.hidden { opacity: 0; visibility: hidden; transform: translateX(-50%) translateY(-10px); transition: opacity 0.4s ease-in, visibility 0.4s ease-in, transform 0.4s ease-in; }

/* Footer Styles */
footer {
   background: #0a1172; color: white; padding: 2rem 5rem;
   display: flex; justify-content: space-between; margin-top: auto; width: 100%;
}
.footer-logo { width: 20%; }
.footer-logo img { max-width: 80px; }
.footer-tagline { font-size: 0.9rem; margin-top: 1rem; line-height: 1.5; }
.footer-links { display: flex; gap: 3rem; }
.footer-links h3 { font-size: 1rem; margin-bottom: 1rem; }
.footer-links ul { list-style: none; padding: 0; } /* Reset padding */
.footer-links li { margin-bottom: 0.5rem; }
.footer-links a { text-decoration: none; color: #ccc; font-size: 0.9rem; transition: color 0.3s; }
.footer-links a:hover { color: white; }
.footer-socials h3 { font-size: 1rem; margin-bottom: 1rem; color: var(--white); }
.social-icons-list { display: flex; flex-wrap: wrap; gap: 12px; padding: 0; } /* Reset padding */
.social-icon-item { display: inline-block; width: 30px; height: 30px; line-height: 0; transition: transform 0.2s ease; }
.social-icon-item:hover { transform: scale(1.1); }
.social-icon-item img { width: 100%; height: 100%; object-fit: contain; display: block; }


/* Responsive Styles */
@media (max-width: 992px) { /* Added breakpoint for 3 cards */
   :root {
       --card-width: 190px; /* Slightly smaller cards */
       --card-gap: 20px;
   }
    .match-container {
       max-width: calc(var(--card-width) * 3 + var(--card-gap) * 2 + 40px);
    }
    .tutor-area {
       max-width: calc(var(--card-width) * 3 + var(--card-gap) * 2);
        gap: var(--card-gap);
    }
}

@media (max-width: 768px) {
    header { flex-direction: column; gap: 1rem; padding: 1rem; }
    nav ul { flex-wrap: wrap; justify-content: center; }
    .right-actions { margin-top: 1rem; }

    .match-container {
        padding-top: 40px; padding-bottom: 40px; min-height: 450px;
         /* Keep 2 cards layout for medium screens */
        max-width: calc(var(--card-width-small) * 2 + var(--card-gap-small) + 40px);
    }
   :root { /* Redefine within this breakpoint */
       --card-width: var(--card-width-small); /* Use small card size */
       --card-image-height: var(--card-image-height-small);
       --card-gap: var(--card-gap-small);
   }
    .tutor-area {
       /* Keep 2 cards layout for medium screens */
       max-width: calc(var(--card-width) * 2 + var(--card-gap)); /* Uses redefined small vars */
       gap: var(--card-gap);
       /* Allow wrapping if needed, although stacking happens at 480px */
       flex-wrap: wrap;
    }
    /* Ensure cards use the correct small width */
    .tutor-card { width: var(--card-width); }
    .tutor-image { height: var(--card-image-height); }
    .tutor-info { padding: 15px 10px; }
    .tutor-name { font-size: 1.05em; margin-bottom: 12px; }
    .tutor-seemore-btn, .tutor-message-btn { padding: 6px 15px; font-size: 0.85em; } /* Adjusted padding */
    .final-status-box { font-size: 1em; top: 25px; padding: 8px 20px; }
    .tutor-buttons { flex-direction: column; gap: 8px; }
    .tutor-label { font-size: 0.8em; padding: 3px 10px; }
    /* ADDED: Adjust detail font size */
    .tutor-details { font-size: 0.8em; }

    footer { flex-direction: column; gap: 2rem; padding: 2rem 1rem; text-align: center; }
    .footer-logo, .footer-links, .footer-socials { width: 100%; max-width: none; }
    .footer-socials { justify-content: center; }
}

@media (max-width: 480px) {
     :root {
        --card-width: 85%; /* Stacked card width */
        --card-gap: 15px;
    }
     .tutor-area {
         flex-direction: column; /* Stack cards */
         position: relative; top: auto; left: auto; transform: none;
         margin-top: 30px; width: 100%; align-items: center;
         max-width: 100%; /* Override previous max-width */
         gap: var(--card-gap); /* Vertical gap when stacked */
     }
      .tutor-card {
        width: var(--card-width); margin: 0 auto; /* Center stacked cards */
        transform: translateY(20px) scale(0.9);
    }
    .match-container { min-height: auto; max-width: 95%; } /* Allow shrink */
    .tutor-buttons { flex-direction: row; gap: 10px; justify-content: center; } /* Revert button stacking for single card view */

}
